
CREATE TABLE Products (
    ProductID INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    ProductName VARCHAR(25) NOT NULL,
    Brand VARCHAR(25),
    CategoryName VARCHAR(25) NOT NULL,
    UnitPrice DECIMAL(10, 2) NOT NULL,
    QuantityAvailable INT NOT NULL CHECK (QuantityAvailable >= 0),
    SupplierName VARCHAR(25) NOT NULL,
    ExpiryDate DATE,
    UNIQUE(ProductName),
    FOREIGN KEY (CategoryName) REFERENCES ProductCategories(CategoryName),
    FOREIGN KEY (SupplierName) REFERENCES Suppliers(SupplierName)
);

CREATE TABLE ProductCategories (
    CategoryID INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    CategoryName VARCHAR(25) NOT NULL,
    ProductCount INT DEFAULT 0,
    Discount NUMBER(1) DEFAULT 0
);

CREATE TABLE Suppliers (
    SupplierID INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    SupplierName VARCHAR(25) NOT NULL,
    Email VARCHAR(50),
    Phone VARCHAR(20)
);

CREATE TABLE Sales (
    SaleID INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    ProductName VARCHAR(25) NOT NULL,
    QuantitySold INT NOT NULL CHECK (QuantitySold > 0),
    SaleDate DATE NOT NULL,
    TotalPrice DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

CREATE TABLE Inventory (
    InventoryID INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    ProductName VARCHAR(25) NOT NULL,
    TransactionType VARCHAR(50),
    TransactionDate DATE,
    QuantityChanged INT,
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

CREATE TABLE PaymentMethods (
    PaymentMethodID INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    MethodName VARCHAR(50) NOT NULL,
    TransactionMode VARCHAR(25) NOT NULL,
    TransactionStatus VARCHAR(25) DEFAULT 'Not Applicable'
);

CREATE TABLE ProductDetails(
    ProductDetailsID INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    ProductName VARCHAR(25) NOT NULL,
    Weight INT NOT NULL CHECK (Weight >= 0),
    BarCode INT,
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID),
    CONSTRAINT check_column_length CHECK (LENGTH(BarCode) = 12)
);

SELECT uc.constraint_name,
       uc.constraint_type,
       uc.table_name,
       ucc.column_name,
       uc.r_constraint_name,
       uc.delete_rule
FROM user_constraints uc
JOIN user_cons_columns ucc ON uc.constraint_name = ucc.constraint_name
ORDER BY uc.table_name, uc.constraint_name;

select* from INVENTORY